//
// Generated by Microsoft (R) HLSL Shader Compiler 9.27.952.3022
//
//   fxc /dumpbin sonicvs.wvu
//
//
// Parameters:
//
//   float4 g_AmbientReg[2];
//   float g_AmbientSrcType[4];
//   float g_DiffAttenSelect[4];
//   float4 g_LightAttenA[4];
//   float3 g_LightAttenK[4];
//   float4 g_LightColor[4];
//   float3 g_LightDir[4];
//   float g_LightFuncEnable[4];
//   float g_LightMask[16];
//   float3 g_LightPos[4];
//   float4 g_MaterialReg[2];
//   float g_MaterialSrcType[4];
//   float g_NumTexGens;
//   float4x4 g_ProjMatrix;
//   float g_TexGenSrc_0;
//   float4x4 g_TexMatrix[10];
//   float4x4 g_WorldMatrix;
//   float4x4 g_WorldViewITMatrix;
//   float m_AttnFunc[4];
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_WorldMatrix       c0       4
//   g_ProjMatrix        c8       4
//   g_WorldViewITMatrix c12      3
//   g_LightPos          c20      4
//   g_LightDir          c24      4
//   g_LightColor        c28      4
//   g_LightAttenA       c32      4
//   g_LightAttenK       c36      4
//   g_MaterialSrcType   c40      3
//   g_AmbientSrcType    c44      3
//   g_DiffAttenSelect   c48      3
//   g_LightFuncEnable   c52      3
//   m_AttnFunc          c56      3
//   g_MaterialReg       c66      1
//   g_AmbientReg        c68      1
//   g_LightMask         c70     16
//   g_TexGenSrc_0       c140     1
//   g_NumTexGens        c155     1
//   g_TexMatrix         c160    23
//

    vs_3_0
    def c4, 1, 0, 0.5, 0.699999988
    def c5, 0.300000012, 0.699999988, 0.00999999978, -0.00999999978
    def c6, 0, 0, 1, 2
    defi i0, 4, 0, 1, 0
    dcl_position v0
    dcl_normal v1
    dcl_texcoord v2
    dcl_color v3
    dcl_position o0
    dcl_texcoord o1
    dcl_texcoord1 o2.xyz
    dcl_texcoord2 o3.xy
    dcl_texcoord3 o4
    dcl_texcoord4 o5
    dcl_texcoord5 o6
    dcl_texcoord6 o7.xyz
    dcl_texcoord7 o8.xyz
    mad r0, v0.xyzx, c4.xxxy, c4.yyyx
    dp4 r1.x, r0, c0
    dp4 r1.y, r0, c1
    dp4 r1.z, r0, c2
    dp4 r1.w, r0, c3
    dp4 o0.x, r1, c8
    dp4 o0.y, r1, c9
    dp4 r2.x, r1, c10
    dp4 o0.w, r1, c11
    nrm r3.xyz, v1
    dp3 r4.x, r3, c12
    dp3 r4.y, r3, c13
    dp3 r4.z, r3, c14
    nrm r3.xyz, r4
    mov r2.zw, c4
    slt r1.w, r2.z, c40.x
    lrp r4.xyz, r1.w, c66, v3
    slt r1.w, r2.z, c42.x
    lrp r4.w, r1.w, c66.w, v3.w
    slt r1.w, r2.z, c44.x
    lrp r5.xyz, r1.w, c68, v3
    slt r1.w, r2.z, c46.x
    lrp r5.w, r1.w, c68.w, v3.w
    slt r1.w, r2.z, c52.x
    slt r2.y, r2.z, c54.x
    mov r6.xy, c5
    slt r6.zw, c48.x, r6.xyxy
    slt r6.xy, c50.x, r6

    //r2.w = ALPHA attn func?
    //so i made r11.w the color0 attn func check
    slt r11.w, r2.w, c56.x
    slt r2.w, r2.w, c58.x
    

    mov r7, c4.y
    loop aL, i0
      slt r3.w, r2.z, c70[aL].x
      mul r3.w, r1.w, r3.w
      slt r8.x, r2.z, c78[aL].x
      mul r8.x, r2.y, r8.x
      add r8.y, r3.w, r8.x
      if_lt -r8.y, r8.y
        add r8.yzw, -r1.xxyz, c20[aL].xxyz
        nrm r9.xyz, r8.yzww
        dp3 r8.y, r3, r9
        max r8.y, r8.y, c4.y
        dp3 r8.z, c24[aL], c24[aL]
        rsq r8.z, r8.z
        mul r10.xyz, r8.z, c24[aL]
        dp3_sat r10.y, r9, -r10
        dp3 r8.z, r9, r9
        rsq r8.z, r8.z
        rcp r8.z, r8.z
        mul r8.w, r8.z, r8.z
        mul r8.w, r8.w, c36[aL].z
        mul r8.z, r8.z, c36[aL].y
        add r8.z, r8.z, r8.w
        add r8.z, r8.z, c36[aL].x
        slt r8.w, r8.z, c5.z
        slt r9.x, c5.w, r8.z
        mul r8.w, r8.w, r9.x
        lrp r9.x, r8.w, c4.x, r8.z
        mul r8.z, r10.y, r10.y
        mul r8.z, r8.z, c32[aL].z
        mul r8.w, r10.y, c32[aL].y
        add r8.z, r8.w, r8.z
        add_sat r8.z, r8.z, c32[aL].x
        rcp r8.w, r9.x
        mul r8.z, r8.w, r8.z
        mov r9.xyz, r8.y
        mov r10.x, c32[aL].w
      else
        mov r9.xyz, c4.y
        mov r10.xy, c4.y
        mov r8.yz, c4.y
      endif
      if_ne r3.w, -r3.w
        min r11.xyz, r9, c4.x
        lrp r12.xyz, r6.w, r9, r11
        lrp r9.xyz, r6.z, c4.x, r12

        //this part is added so that attnfunc applies to channel COLOR0
        //this being missing made the spotlight act more like a directional light
        //which is what caused the eggman levels to look fullbright
        //now the distance attenuation calculation is taken into account
        //(and to not break anything else, so is m_attnfunc[0] which I stored in r11.w)
        slt r8.x, r10.y, r10.x
        mad r8.x, r8.x, -r8.z, r8.z
        lrp r12.x, r11.w, c4.x, r8.x
        mul r9.xyz, r9.xyz, r12.xxx

        mul r9.xyz, r9, c28[aL]
        add r7.xyz, r7, r9
      endif
      if_ne r8.x, -r8.x
        min r3.w, r8.y, c4.x
        lrp r9.x, r6.y, r8.y, r3.w
        lrp r3.w, r6.x, c4.x, r9.x
        slt r8.x, r10.y, r10.x
        mad r8.x, r8.x, -r8.z, r8.z
        lrp r9.x, r2.w, c4.x, r8.x
        mul r3.w, r3.w, r9.x
        mul r3.w, r3.w, c28[aL].w
        add r7.w, r3.w, r7.w
      endif
    endloop
    add_sat r3, r5, r7
    lrp r5.xyz, r1.w, r3, c4.x
    lrp r5.w, r2.y, r3.w, c4.x
    mul o4, r4, r5
    dp4 r1.x, r0, c164
    dp4 r1.y, r0, c165
    dp4 r1.z, r0, c166
    rcp r1.z, r1.z
    mul o5.xy, r1.z, r1
    dp4 r1.z, r0, c168
    dp4 r1.w, r0, c169
    dp4 r1.x, r0, c170
    rcp r1.x, r1.x
    mul o5.zw, r1.x, r1
    dp4 r1.x, r0, c172
    dp4 r1.y, r0, c173
    dp4 r1.z, r0, c174
    rcp r1.z, r1.z
    mul o6.xy, r1.z, r1
    dp4 r1.z, r0, c176
    dp4 r1.w, r0, c177
    dp4 r1.x, r0, c178
    rcp r1.x, r1.x
    mul o6.zw, r1.x, r1
    dp4 r1.x, r0, c180
    dp4 r1.y, r0, c181
    dp4 r1.z, r0, c182
    rcp r1.z, r1.z
    mul o7.xy, r1.z, r1
    mad r1, v2.xyxx, c4.xxyy, c4.yyxx
    dp4 r3.x, r1, c160
    dp4 r3.y, r1, c161
    dp4 r3.z, r1, c162
    dp4 r1.x, r0, c160
    dp4 r1.y, r0, c161
    dp4 r1.z, r0, c162
    mov r0.zw, c6
    slt r0.xy, c140.x, r0.zwzw
    mad r4, v1.xyzx, c4.xxxy, c4.yyyx
    dp4 r5.x, r4, c160
    dp4 r5.y, r4, c161
    dp4 r5.z, r4, c162
    lrp r2.yzw, r0.y, r5.xxyz, r3.xxyz
    add r0.yzw, r1.xxyz, -r2
    mad o8.xyz, r0.x, r0.yzww, r2.yzww
    mov o0.z, r2.x
    mov o1.xyz, v0
    mov o1.w, r2.x
    mov o2.xyz, v1
    mov o3.xy, v2
    mov o7.z, c155.x